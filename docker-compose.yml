version: '3'
services:
#   maildev:
#     image: maildev/maildev
#     container_name: maildev_startkit
#     command: bin/maildev --web 80 --smtp 25 --hide-extensions STARTTLS
#     ports:
#       - 8081:80
#       - 25:25
# #    restart: always
#     networks:
#       - dev

#   mongodb:
#     image: mongo:5.0
#     container_name: mongo_startkit
#     environment:
#       - MONGO_INITDB_ROOT_USERNAME=startkit
#       - MONGO_INITDB_ROOT_PASSWORD=startkit123
#     ports:
#       - 27016:27017
#     volumes:
#       - db-data:/data/db
#     networks:
#       - dev

#   apimongo:
#     container_name: apimongo_startkit
#     build:
#       context: ./api-mongo
#       dockerfile: Dockerfile.dev
#     volumes:
#       - ./api-mongo:/app
#     environment:
#       - PORT=5000
#       - BASE_URL=http://localhost:3000
#       - MONGODB_URL=mongodb://startkit:startkit123@mongodb
#       - ACCESS_TOKEN_SECRET=Secret12
#       - ACTIVE_TOKEN_SECRET=Secret12
#       - REFRESH_TOKEN_SECRET=Secret12
#     ports:
#       - 5000:5000
# #    restart: always
#     external_links:
#       - mongodb
#     depends_on:
#       - mongodb
#     networks:
#       - dev

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin_startkit
#    restart: always
    depends_on:
      - db
    ports:
      - 8080:80
    environment:
      PMA_HOST: db
      UPLOAD_LIMIT: 64M
    networks:
      - dev

  mysql:
    image: mysql
    container_name: mysql_startkit
#     restart: always
    volumes:
      - db-data:/var/lib/mysql
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    networks:
    - dev

  apisql:
    container_name: apisql_startkit
    build:
      context: ./api-sql
      dockerfile: Dockerfile.dev
    volumes:
      - ./api-sql:/app
    environment:
      - PORT=5000
      - BASE_URL=http://localhost:3000
      - BDD_URL=mysql
      - ACCESS_TOKEN_SECRET=Secret12
      - ACTIVE_TOKEN_SECRET=Secret12
      - REFRESH_TOKEN_SECRET=Secret12
    ports:
      - 5000:5000
#    restart: always
    external_links:
      - mysql
    depends_on:
      - mysql
    networks:
      - dev

#  front:
#    container_name: front_startkit
#    build:
#      context: ./front-react
#      dockerfile: Dockerfile.dev
#    volumes:
#      - ./front-react:/app
#    ports:
#      - 3000:3000
#    restart: always
#    external_links:
#      - apisql # or apimongo
#    depends_on:
#      - apisql # or apimongo
#    networks:
#      - dev

networks:
  dev:

volumes:
  db-data: